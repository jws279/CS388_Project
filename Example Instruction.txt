Y = AX^2 + B

A1 = A1 + K1; A2 = A2 + K2;                // Fetch X; Fetch A;
X0 = X1 * X1; X6 = X0 * X2; A3 = A3 + K3   // Form X^2; Form AX^2; Fetch B;
X7 = X6 + X3; A7 = A7 + K7;                // Form Y; Store Y; <end program>

5011- -----;5022- -----
40011;40602;5033- -----
30763;5077- -----;00000

50110000065022000004
40011406025033000005
30763507700000700000
00000000000000000000                       // Padding
00000000000000000001                       // A     000004
00000000000000000002                       // B
00000000000000000001                       // X
00000000000000000000                       // Y     000007

/********************************************************************************/
Y = AX^2 + BX + C

A1 = A1 + K1; A2 = A2 + K2;                // Fetch X; Fetch A;
X0 = X1 * X1; X6 = X0 * X2; A3 = A3 + K3   // Form X^2; Form AX^2; Fetch B;
A4 = A4 + K4; X3 = X3 * X1; X5 = X6 + X3   // Fetch C; Form BX; Form AX^2 + BX
X7 = X5 + X4; A7 = A7 + K5;                // Form Y; Store Y; <end program>

5011- -----;5022- -----
40011;40602;5033- -----
5044- -----;40331;30563
30754;5077- -----;00000

50110000075022000004
40011406025033000005
50440000064033130563
30754507700001000000
00000000000000000001                       // A    000004
00000000000000000002                       // B
00000000000000000003                       // C
00000000000000000001                       // X
00000000000000000000                       // Y    000010

/********************************************************************************/
Y = AX^2 + BX + C    <X and Y are vectors, n=5>

A5 = A5 + K5; A2 = A2 + K2;                             // Fetch n; Fetch A
B2 = X5 + B0; A3 = A3 + K3;                             // Move n to B2; Fetch B;
A4 = A4 + K4; B1 = B0 + K0;                             // Fetch C; Set B1 = 1
A1 = B2 + K1; X0 = X1 * X1; X5 = X3 * X1;               // Fetch X[n]; Form X^2; Form BX; 
X6 = X0 * X2; X5 = X5 + X4; X7 = X6 + X5;               // Form AX^2; Form BX + C; Form Y[n];
A7 = B2 + K7; B2 = B2 - B1;                             // Store Y[n]; Decrement n
GOTO 'Fetch X[n]'if B2!=B0;                             // If n!=0, jump to Fetch X[n]; <end program>; ---

5055- -----;5022- -----;
63250;5033- -----;     ;
5044- -----;61100 00001;
5112- -----;40011;40531;
40602;30554;30765;     ;
5172- -----;67221;     ;
05200 00003;00000;     ;

50550000135022000010
63250503300001146000
50440000126110000001
51120000144001140531
40602305543076546000
51720000216722146000
05200000030000046000
00000000000000000000
00000000000000000001                                    // A      000010
00000000000000000002                                    // B
00000000000000000003                                    // C
00000000000000000005                                    // n
00000000000000000000                                    // X[0]   000014
00000000000000000001                                    // X[1]
00000000000000000002                                    // X[2]
00000000000000000003                                    // X[3]
00000000000000000004                                    // X[4]
00000000000000000000                                    // Y[0]   000021
00000000000000000000                                    // Y[1]
00000000000000000000                                    // Y[2]
00000000000000000000                                    // Y[3]
00000000000000000000                                    // Y[4]
